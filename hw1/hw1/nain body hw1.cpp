#include<stdio.h>
#include<Windows.h>
#include<locale.h>
#include<conio.h>
#include<math.h>



//------------------------ ПРОГРАММА 1. СУММА ЦИФР ЦЕЛОГО ЧИСЛА

//int main ()
//{
//	setlocale(LC_ALL, "RUSSIAN");
//	
//	int a, s=0;		// Инициализация переменных. а - исходное число, s - сумма
//	printf("Программа по подсчету суммы цифр целого числа.\nВведите число.\n");		// Подсказка ввода
//	while (!scanf("%d", &a))								// Ввод исходных данных. Если а не введется корректно
//	{
//		fflush(stdin);										// Происходит очистка ячейки ввода
//		printf("Некорректный ввод. Введите число заново\n");// Выдается подсказка о некорректности. цикл возвращает программу в начало цикла ко вводу числа
//	}																				
//
//
//	while (a!=0)	// Цикл подсчета суммы выполнчется, пока а не равно нулю
//	{
//		s+=a%10;	// К s прибавляется значение последнего разряда а
//		a=a/10;		// А уменьшается на разряд справа
//	}
//
//	printf("сумма цифр равна %d.\nРабота программы завершена.\nНажмите на любую клавишу для выхода из программы.", s);		// Вывод суммы
//	getch();	// Задержка экрана до нажатия любой клавиши
//
//	return 0;
//}






//------------------------ ПРОГРАММА 2. ОБЩИЕ ДЕЛИТЕЛИ НАТУРАЛЬНЫХ ЧИСЕЛ

//int main ()
//{
//	setlocale(LC_ALL, "RUSSIAN");
//	
//	long int a, b, i=2;		// Инициализация переменных. а, b - исходные числа, i - индекс цикла по нахождению общих делителей
//	printf("Программа по нахождению общих делителей двух натуральных чисел.\n");	// Подсказка ввода
//
//
//
//	printf("Введите первое число.\n");	// Подсказка ввода первого числа
//
//	while ( (!scanf("%d", &a) )  ||  (a<=0)  )							// Если а (первое число) не введется корректно (целое число большее нуля)
//		{
//			fflush(stdin);												// Происходит очистка ячейки ввода
//			printf("Некорректный ввод. Введите первое число заново\n");	// Выдается подсказка о некорректности. цикл возвращает программу в начало цикла ко вводу числа
//		}		
//
//
//
//	printf("Введите второе число.\n");	// Подсказка ввода второго числа
//	
//	while ( (!scanf("%d", &b) )  ||  (b<=0)  )		// Аналогичная проверка с вводом для b (второе число)
//		{
//			fflush(stdin);																	
//			printf("Некорректный ввод. Введите второе число заново\n");								
//		}	
//
//
//
//
//	printf("\n\nОбщие делители чисел %d и %d: 1", a, b);	// Начало вывода. Далее мы будем пополнять эту строку
//
//
//	for (;(i<=a)&&(i<=b);i++)			// i проходит значения от 2 до наименьшего из а и b
//		if (  (a%i==0)  &&  (b%i==0)  )	// Если на i оба числа делится без остатка
//			printf(",  %d", i);			// То i - их общий делитель, и он выводится на экран
//
//
//
//	printf(".\nРабота программы завершена.\nНажмите на любую клавишу для выхода из программы.");		// Вывод конца подсказок
//
//	getch();	//задержка экрана до нажатия любой клавиши
//	
//	return 0;
//}






//------------------------ ПРОГРАММА 3. ФАКТОРИАЛ ЦЕЛОГО НЕОТРИЦАТЕЛЬНОГО ЧИСЛА

//int main ()
//{
//	setlocale(LC_ALL, "RUSSIAN");
//
//	int a, i=2, n=1;		// Инициализация переменных. а - исходное число, i - индекс цикла по нахождению факториала, n - переменная факториала
//	printf("Программа по вычислению факториала числа.\n");	// Подсказка ввода
//
//
//
//	printf("Введите целое неотрицательное число.\n");	// Подсказка ввода первого числа
//
//	while ( (!scanf("%d", &a) )  ||  (a<0)  )							// Если а  не введется корректно (целое неотрицательное число)
//		{
//			fflush(stdin);												// Происходит очистка ячейки ввода
//			printf("Некорректный ввод. Введите число заново\n");		// Выдается подсказка о некорректности. цикл возвращает программу в начало цикла ко вводу числа
//		}		
//
//	if (a!=0)				// Если а не равно нулю, то факториал рассчитывается по стандартной формуле: n=a!=1*2*...*(a-1)*a
//
//		for (; i<=a; i++)	// Это и осуществляется в следующем цикле, где i - множитель, принимающий значения от 2 до а
//			n=n*i;			// И на этот множитель мы кмножаем переменную значения факториала (n)
//
//	else n=1;				// Если же а=0, то n=0!=1 по умолчанию (исходя из свойств Гамма-функции)
//	
//
//	printf("%d!=%d\nРабота программы завершена.\nНажмите на любую клавишу для выхода из программы.", a,n);	// Вывод результата на экран
//
//	getch();	// Задержка экрана до нажатия любой клавиши
//
//	return 0;
//}






//------------------------ ПРОГРАММА 4. ПОСЛЕДОВАТЕЛЬНОСТЬ ФИББОНАЧИ С ЗАДАННОЙ ДЛИННОЙ

//int main ()
//{
//	setlocale(LC_ALL, "RUSSIAN");
//
//	int l, a1=1, a2=1,a=0;		// Инициализация переменных. l - количество чисел фиббоначи, a1 - предыдущий член, a2 - предпредыдущий член, a - настоящий член
//	printf("Программа по нахождению ряда чисел Фиббоначи.\n");	// Оформление окна
//
//
//
//	printf("Введите натуральное число - количество выводимых на экран членов ряда.\n");	// Подсказка ввода
//
//	while ( (!scanf("%d", &l) )  ||  (l<1)  )							// Если l  не введется корректно (натуральное число)
//		{
//			fflush(stdin);												// Происходит очистка ячейки ввода
//			printf("Некорректный ввод. Введите число заново\n");		// Выдается подсказка о некорректности. цикл возвращает программу в начало цикла ко вводу числа
//		}		
//
//	printf("Первые %d числа Фиббоначи: 1", l);		// Поскольку l не может быть меньше 1, то первый элемент - еденица - выводится сразу по умолчанию
//
//	if (l>2) // если l>2, то есть кроме первых двух едениц необходимо указать и дальнейшие члены
//		{
//			printf(", 1");					// То во-первых мы выводим второй элемент - еденицу
//
//			for (int i = 3; i<=l; i++)		// Теперь, считая i за номер члена ряда, который идет от трех до l
//			{
//				a=a1+a2;			// Находим следующий элемент
//				printf(", %d", a);	// И выводим его на экран
//				a2=a1;				// Обновляем значение предпредпоследнего элемента
//				a1=a;				// Обновляем значение предпоследнего элемента
//			}
//		}
//	else
//	if (l==2) printf(", 1");	// Если l=2(так как все остальные варианты мы уже учли, и они не зависят друг от друга), то в этом случае мы выводим второй элемент - еденицу
//	
//
//	printf(".\nРабота программы завершена.\nНажмите на любую клавишу для выхода из программы.");	//Окончание оформления окна
//
//	getch();	// Задержка экрана до нажатия любой клавиши
//
//	return 0;
//}






//------------------------ ПРОГРАММА 5. ПРОСТЫЕ ЧИСЛА В ЗАДАННОМ ИНТЕРВАЛЕ

//int main ()
//{
//	setlocale(LC_ALL, "RUSSIAN");
//
//	int a, b, i, f=0;
//
//	printf("Программа по нахождению простых чисел \nв заданном интервале натуральных чисел [a;b].\nСледует отметить, что 1 не является ни простым, ни составным числом.\n");	// Оформление окна
//
//	printf("Введите левый конец интервала.\nа=");	// Подсказка ввода левого конца (а)
//
//	while ( (!scanf("%d", &a) )  ||  (a<=0)  )								// Если а не введется корректно (целое число большее нуля)
//		{
//			fflush(stdin);													// Происходит очистка ячейки ввода
//			printf("Некорректный ввод. Введите первое число заново.\nа=");	// Выдается подсказка о некорректности. цикл возвращает программу в начало цикла ко вводу числа
//		}		
//
//
//	printf("Введите правый конец.\nb=");	// Подсказка ввода правого конца (b)
//	
//	while ( (!scanf("%d", &b) )  ||  (b<a)  )		// Аналогичная проверка с вводом для b (целое число не меньшее а)
//		{
//			fflush(stdin);																	
//			printf("Некорректный ввод. Введите второе число заново\nb=");								
//		}	
//
//	printf("Простые числа на промежутке [%d;%d]: ", a,b);		// Начало оформления строки вывода
//
//	for (a; a<=b; a++)				// Запускается цикл по пернмннной а - число, которое мы будем проверять на "простоту"
//	{
//		for (i=2; i<a; i++)			// Подцикл по пеменной i от 2 до а не включительно
//			if (a%i==0) break;		// Если а делится на i, то это составное число, цикл останавливается, i остается равному числу меньше а.
//
//		if ((i>=a)&&(a!=1))			// Если не одно из i не являлось делителем а, которое в свою очередь не является 1(ее мы не вывдим), то а является простым
//		{
//			printf(" %d", a);		// И мы выводим его на экран
//			f=1;					// А также помечаем переменную-флажок за еденицу
//		}
//
//
//	}
//
//	if (!f) printf("не обнаружено");	// Если же на данном промежутке не было обнаружено простых чисел, флажок остается равен нулю. В таком случае выводится фраза "не обнаружено"
//
//	printf(".\nРабота программы завершена.\nНажмите на любую клавишу для выхода из программы.");	//Окончание оформления окна
//
//	getch();	// Задержка экрана до нажатия любой клавиши
//
//	return 0;
//}
