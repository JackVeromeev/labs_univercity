#include<stdio.h>
#include"sort_functions.h"

//«адание 1: сортировка массива пузырьком
void bubble(int *m, int n)
{
	int k, i, j;
	for (i = 0; i < n; i++)
	{
		for (j= 0; j < n-1; j++)
			if (*(m+j)>*(m+j+1))
			{
				k=*(m+j);
				*(m+j)=*(m+j+1);
				*(m+j+1)=k;
			}

	}
}

//«адание 2: переместить отриц. эл-ты влево, положительные - влево, не мен€€ очередность эл-тов.
void sort_all(int *m, int n)
{
	int ileft=0, var, i, j;									//инициализаци€ дополнительных переменных

	for (i = ileft; i<n && *(m+i)>=0; i++);				//нахождение индекса первого отрицательного элемента
	while (i<n)											//поиск и смещение эл-тов будет происходить до тех пор, пока отсортированными не останутс€ все отр. эл-ты, в этом случае дл€ i вернетс€ значение n
	{
		var=*(m+i);										//происходит перемещени€ найденного эл-та m[i] на место m[ileft], все эл-ты между ними смещаютс€
		for (j=i; j>ileft; j--) *(m+j)=*(m+j-1);
		*(m+ileft)=var;
		ileft++;										//ileft сдвигаетс€ дл€ перемещени€ следующего отр. эл-та
		for (i = ileft; i<n && *(m+i)>=0; i++);
	}

	// ѕохожий алгоритм выполн€етс€ дл€ нулевых элементов
	for (i = ileft; i<n && *(m+i)!=0; i++);
	while (i<n)
	{
		var=*(m+i);
		for (j=i; j>ileft; j--) *(m+j)=*(m+j-1);
		*(m+ileft)=var;
		ileft++;
		for (i = ileft; i<n && *(m+i)!=0; i++);
	}
}

//«адание 3 схоже с заданием 2, однако введено дополнительное условие: нулевые элементы остаютс€ на своих местах
void sort_all_by_zero(int *m, int n)
{
	int ileft=0, var, k, i, j;									//инициализаци€ дополнительных переменных

	for (i = ileft; i<n && *(m+i)>=0; i++);					//нахождение индекса первого отрицательного элемента
	while (*(m+ileft)==0) ileft++;							//

	//поиск и смещение эл-тов будет происходить до тех пор, пока отсортированными не останутс€ все отр. эл-ты, в этом случае дл€ i вернетс€ значение n
	while (i<n)
	{		
		var=*(m+i);		
		for (j=i; j>ileft;) 
		{
			for (k=j-1; k>ileft && *(m+k)==0; k--);

			*(m+j)=*(m+k);
			j=k;

		}
		*(m+ileft)=var;

		ileft++;	
		while (*(m+ileft)==0) ileft++;						//ileft сдвигаетс€ на сле дл€ перемещени€ следующего отр. эл-та
		for (i = ileft; i<n && *(m+i)>=0; i++);
	}
}
